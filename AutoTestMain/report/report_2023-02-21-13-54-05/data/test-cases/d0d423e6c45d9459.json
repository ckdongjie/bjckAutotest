{"uid":"d0d423e6c45d9459","name":"testDeactiveAndActiveCellAccessSuccRate[1]","fullName":"TestCase.ue.test_cpe#testDeactiveAndActiveCellAccessSuccRate","historyId":"bd8ad244a551b075c84d41d8940b6872","time":{"start":1676958637454,"stop":1676958741658,"duration":104204},"status":"failed","statusMessage":"AssertionError: cpe登录失败，请检查！","statusTrace":"testNum = 1, serialNumber = '902272840007', cpeIp = '192.168.1.1'\nattachDelay = 3, detachDelay = 3\n\n    @allure.story(\"接入成功率测试\")\n    @pytest.mark.去激活激活小区后接入成功率测试\n    @pytest.mark.run(order=5)\n    @pytest.mark.skipif(globalPara.get_upgrade_status()==True, reason='No Newest Version Upgrade')\n    @pytest.mark.parametrize(\"testNum\",RUN_TESTCASE['去激活激活小区后接入成功率测试'] if RUN_TESTCASE.get('去激活激活小区后接入成功率测试') else [])\n    def testDeactiveAndActiveCellAccessSuccRate(testNum, serialNumber=BASIC_DATA['gnb']['serialNumberList'], cpeIp=BASIC_DATA['cpe']['cpeSshIp'], attachDelay=BASIC_DATA['attach']['attachDelay'], detachDelay=BASIC_DATA['attach']['detachDelay']):\n        AccSuccNum = 0\n>       cpe = key_cpe_login(cpeIp)\n\n..\\TestCase\\ue\\test_cpe.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncpeIp = '192.168.1.1', username = 'root', password = 'snc123...'\n\n    def key_cpe_login(cpeIp, username=\"root\", password=\"snc123...\"):\n        with allure.step(key_get_time() +\": 登录CPE前台\\n\"):\n            logging.info(key_get_time()+': login cpe command model')\n            cpe = CpeService().cpe_login(cpeIp, username, password)\n>           assert cpe != None, 'cpe登录失败，请检查！'\nE           AssertionError: cpe登录失败，请检查！\n\n..\\UserKeywords\\ue\\CpeManager.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: cpe登录失败，请检查！","statusTrace":"testNum = 1, serialNumber = '902272840007', cpeIp = '192.168.1.1'\nattachDelay = 3, detachDelay = 3\n\n    @allure.story(\"接入成功率测试\")\n    @pytest.mark.去激活激活小区后接入成功率测试\n    @pytest.mark.run(order=5)\n    @pytest.mark.skipif(globalPara.get_upgrade_status()==True, reason='No Newest Version Upgrade')\n    @pytest.mark.parametrize(\"testNum\",RUN_TESTCASE['去激活激活小区后接入成功率测试'] if RUN_TESTCASE.get('去激活激活小区后接入成功率测试') else [])\n    def testDeactiveAndActiveCellAccessSuccRate(testNum, serialNumber=BASIC_DATA['gnb']['serialNumberList'], cpeIp=BASIC_DATA['cpe']['cpeSshIp'], attachDelay=BASIC_DATA['attach']['attachDelay'], detachDelay=BASIC_DATA['attach']['detachDelay']):\n        AccSuccNum = 0\n>       cpe = key_cpe_login(cpeIp)\n\n..\\TestCase\\ue\\test_cpe.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncpeIp = '192.168.1.1', username = 'root', password = 'snc123...'\n\n    def key_cpe_login(cpeIp, username=\"root\", password=\"snc123...\"):\n        with allure.step(key_get_time() +\": 登录CPE前台\\n\"):\n            logging.info(key_get_time()+': login cpe command model')\n            cpe = CpeService().cpe_login(cpeIp, username, password)\n>           assert cpe != None, 'cpe登录失败，请检查！'\nE           AssertionError: cpe登录失败，请检查！\n\n..\\UserKeywords\\ue\\CpeManager.py:30: AssertionError","steps":[{"name":"2023-02-21 13:50:37: 登录CPE前台\n","time":{"start":1676958637454,"stop":1676958741657,"duration":104203},"status":"failed","statusMessage":"AssertionError: cpe登录失败，请检查！\n","statusTrace":"  File \"D:\\autotestPro\\UserKeywords\\ue\\CpeManager.py\", line 30, in key_cpe_login\n    assert cpe != None, 'cpe登录失败，请检查！'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"e58fa8b45e9b603","name":"log","source":"e58fa8b45e9b603.txt","type":"text/plain","size":359}],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"story","value":"接入成功率测试"},{"name":"tag","value":"@pytest.mark.skipif(False, reason='No Newest Version Upgrade')"},{"name":"tag","value":"run(order=5)"},{"name":"tag","value":"去激活激活小区后接入成功率测试"},{"name":"parentSuite","value":"TestCase.ue"},{"name":"suite","value":"test_cpe"},{"name":"host","value":"DESKTOP-6PNVEH8"},{"name":"thread","value":"10844-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.ue.test_cpe"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"testNum","value":"1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=5)","去激活激活小区后接入成功率测试","@pytest.mark.skipif(False, reason='No Newest Version Upgrade')"]},"source":"d0d423e6c45d9459.json","parameterValues":["1"]}