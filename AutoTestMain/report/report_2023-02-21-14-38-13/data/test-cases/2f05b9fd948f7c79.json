{"uid":"2f05b9fd948f7c79","name":"testVersionSmoke","fullName":"TestCase.hms.test_version#testVersionSmoke","historyId":"dc9ddaeae0deb8c50e29d09fdb8db947","time":{"start":1676960679282,"stop":1676961180997,"duration":501715},"status":"broken","statusMessage":"UnboundLocalError: local variable 'alarmList' referenced before assignment","statusTrace":"@allure.story(\"冒烟测试——版本升级\")\n    @pytest.mark.基站版本冒烟测试\n    @pytest.mark.run(order=1)\n    def testVersionSmoke():\n        serialNumberList=BASIC_DATA['gnb']['serialNumberList']\n        verBranch=BASIC_DATA['version']['verBranch']\n        savePath=BASIC_DATA['version']['versionSavePath']\n        isCheckCell = BASIC_DATA['version']['isCheckCell']\n        isAttach = BASIC_DATA['cpe']['isAttach']\n        isPing = BASIC_DATA['cpe']['isPing']\n        isTraffic = BASIC_DATA['cpe']['isFlow']\n    \n        hmsObj = key_login_hms(BASIC_DATA['hms']['ip'])\n        enbId, enbName = key_get_enb_info(hmsObj, serialNumberList)\n        #查询基站运行版本号\n        key_query_version_info_from_device(hmsObj, serialNumberList)\n        verInfoDict = key_query_version_info(hmsObj, serialNumberList)\n        curVersion = verInfoDict['rows'][0]['enbInfo']['softVersion']\n        with allure.step(key_get_time()+':当前运行的版本号: '+curVersion):\n            logging.info(key_get_time()+': current version: '+curVersion)\n        #查询版本库中是否有最新版本\n        newestVerNum = key_get_newest_version(verBranch, curVersion)\n        if newestVerNum != '':\n            key_upload_version_to_hms_if_version_no_exit(hmsObj, newestVerNum, savePath)\n            startTime = key_get_time()\n            downRes = key_download_version(hmsObj, serialNumberList, newestVerNum)\n            assert downRes == 'success', '版本下载执行失败，请检查！'\n            downStatus = key_query_download_status(hmsObj, enbName)\n            assert downStatus == 'success','基站版本下载失败，请检查！'\n            activeRes = key_active_version(hmsObj, serialNumberList)\n            assert activeRes == 'success', '版本激活失败，请检查！'\n            activeStatus = key_query_active_status(hmsObj, enbName)\n            assert activeStatus == 'success','基站版本激活失败，请检查！'\n            with allure.step(key_get_time()+':版本激活成功，等待基站复位重启（3min）'):\n                logging.info(key_get_time()+': active success, gnb will auto reboot, wait for 3min......')\n                key_wait(180) #基站激活复位，等待3min\n            key_confirm_device_online(hmsObj, serialNumberList)\n            with allure.step(key_get_time()+':确认版本升级成功，校验升级后版本号是否正确'):\n                for activeNum in range (0, 10):\n                    key_query_version_info_from_device(hmsObj, serialNumberList)\n                    verInfoDict = key_query_version_info(hmsObj, serialNumberList)\n                    curVersion = verInfoDict['rows'][0]['enbInfo']['softVersion']\n                    if curVersion == newestVerNum:\n                        break\n                    else:\n                        key_wait(5)\n                assert curVersion == newestVerNum,'激活后基站版本校验失败，请检查！'\n            #设置版本升级状态\n            globalPara.set_upgrade_status(True)\n            endTime = key_get_time()\n            #check cell status\n            if isCheckCell:\n                key_confirm_cell_status(hmsObj, enbId, 'available')\n            #gnb alarm\n            logging.info('--------------------------------------------------')\n            logging.info('              new version alarm test              ')\n            logging.info('--------------------------------------------------')\n>           testQueryHistoryAlarm(startTime, endTime)\n\n..\\TestCase\\hms\\test_version.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\TestCase\\hms\\test_alarm.py:45: in testQueryHistoryAlarm\n    alarmList = key_query_history_alarm(hmsObj, serialNumber, alarmRaisedStartTime=startTime, alarmRaisedEndTime=endTime)\n..\\UserKeywords\\hms\\AlarmManager.py:45: in key_query_history_alarm\n    alarmList = AlarmService().query_history_alarm(hmsObj, serialNumber, alarmRaisedStartTime, alarmRaisedEndTime)\n..\\BasicService\\hms\\alarmService.py:23: in query_history_alarm\n    alarmList = AlarmModel(hmsObj).query_history_alarm(sn, alarmRaisedStartTime, alarmRaisedEndTime)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <BasicModel.hms.alarmModel.AlarmModel object at 0x000002C6948483D0>\nsn = '902272840007', alarmRaisedStartTime = '2023-02-21 14:24:43'\nalarmRaisedEndTime = '2023-02-21 14:30:53'\n\n    def query_history_alarm(self, sn, alarmRaisedStartTime='', alarmRaisedEndTime=''):\n        header = ALARM_URL_DICT['queryPageHistoryAlarm']['header']\n        url = self.baseUrl+ALARM_URL_DICT['queryPageHistoryAlarm']['action']\n        body = ALARM_URL_DICT['queryPageHistoryAlarm']['body']\n        body.update({'sn':sn, 'alarmRaisedStartTime':alarmRaisedStartTime, 'alarmRaisedEndTime':alarmRaisedEndTime})\n        response = self.post_request(url, json=body, headers = header)\n        resCode = response.status_code\n        resInfo = response.json()\n        if resCode == 200:\n            alarmList = resInfo['rows']\n>       return alarmList\nE       UnboundLocalError: local variable 'alarmList' referenced before assignment\n\n..\\BasicModel\\hms\\alarmModel.py:42: UnboundLocalError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"UnboundLocalError: local variable 'alarmList' referenced before assignment","statusTrace":"@allure.story(\"冒烟测试——版本升级\")\n    @pytest.mark.基站版本冒烟测试\n    @pytest.mark.run(order=1)\n    def testVersionSmoke():\n        serialNumberList=BASIC_DATA['gnb']['serialNumberList']\n        verBranch=BASIC_DATA['version']['verBranch']\n        savePath=BASIC_DATA['version']['versionSavePath']\n        isCheckCell = BASIC_DATA['version']['isCheckCell']\n        isAttach = BASIC_DATA['cpe']['isAttach']\n        isPing = BASIC_DATA['cpe']['isPing']\n        isTraffic = BASIC_DATA['cpe']['isFlow']\n    \n        hmsObj = key_login_hms(BASIC_DATA['hms']['ip'])\n        enbId, enbName = key_get_enb_info(hmsObj, serialNumberList)\n        #查询基站运行版本号\n        key_query_version_info_from_device(hmsObj, serialNumberList)\n        verInfoDict = key_query_version_info(hmsObj, serialNumberList)\n        curVersion = verInfoDict['rows'][0]['enbInfo']['softVersion']\n        with allure.step(key_get_time()+':当前运行的版本号: '+curVersion):\n            logging.info(key_get_time()+': current version: '+curVersion)\n        #查询版本库中是否有最新版本\n        newestVerNum = key_get_newest_version(verBranch, curVersion)\n        if newestVerNum != '':\n            key_upload_version_to_hms_if_version_no_exit(hmsObj, newestVerNum, savePath)\n            startTime = key_get_time()\n            downRes = key_download_version(hmsObj, serialNumberList, newestVerNum)\n            assert downRes == 'success', '版本下载执行失败，请检查！'\n            downStatus = key_query_download_status(hmsObj, enbName)\n            assert downStatus == 'success','基站版本下载失败，请检查！'\n            activeRes = key_active_version(hmsObj, serialNumberList)\n            assert activeRes == 'success', '版本激活失败，请检查！'\n            activeStatus = key_query_active_status(hmsObj, enbName)\n            assert activeStatus == 'success','基站版本激活失败，请检查！'\n            with allure.step(key_get_time()+':版本激活成功，等待基站复位重启（3min）'):\n                logging.info(key_get_time()+': active success, gnb will auto reboot, wait for 3min......')\n                key_wait(180) #基站激活复位，等待3min\n            key_confirm_device_online(hmsObj, serialNumberList)\n            with allure.step(key_get_time()+':确认版本升级成功，校验升级后版本号是否正确'):\n                for activeNum in range (0, 10):\n                    key_query_version_info_from_device(hmsObj, serialNumberList)\n                    verInfoDict = key_query_version_info(hmsObj, serialNumberList)\n                    curVersion = verInfoDict['rows'][0]['enbInfo']['softVersion']\n                    if curVersion == newestVerNum:\n                        break\n                    else:\n                        key_wait(5)\n                assert curVersion == newestVerNum,'激活后基站版本校验失败，请检查！'\n            #设置版本升级状态\n            globalPara.set_upgrade_status(True)\n            endTime = key_get_time()\n            #check cell status\n            if isCheckCell:\n                key_confirm_cell_status(hmsObj, enbId, 'available')\n            #gnb alarm\n            logging.info('--------------------------------------------------')\n            logging.info('              new version alarm test              ')\n            logging.info('--------------------------------------------------')\n>           testQueryHistoryAlarm(startTime, endTime)\n\n..\\TestCase\\hms\\test_version.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\TestCase\\hms\\test_alarm.py:45: in testQueryHistoryAlarm\n    alarmList = key_query_history_alarm(hmsObj, serialNumber, alarmRaisedStartTime=startTime, alarmRaisedEndTime=endTime)\n..\\UserKeywords\\hms\\AlarmManager.py:45: in key_query_history_alarm\n    alarmList = AlarmService().query_history_alarm(hmsObj, serialNumber, alarmRaisedStartTime, alarmRaisedEndTime)\n..\\BasicService\\hms\\alarmService.py:23: in query_history_alarm\n    alarmList = AlarmModel(hmsObj).query_history_alarm(sn, alarmRaisedStartTime, alarmRaisedEndTime)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <BasicModel.hms.alarmModel.AlarmModel object at 0x000002C6948483D0>\nsn = '902272840007', alarmRaisedStartTime = '2023-02-21 14:24:43'\nalarmRaisedEndTime = '2023-02-21 14:30:53'\n\n    def query_history_alarm(self, sn, alarmRaisedStartTime='', alarmRaisedEndTime=''):\n        header = ALARM_URL_DICT['queryPageHistoryAlarm']['header']\n        url = self.baseUrl+ALARM_URL_DICT['queryPageHistoryAlarm']['action']\n        body = ALARM_URL_DICT['queryPageHistoryAlarm']['body']\n        body.update({'sn':sn, 'alarmRaisedStartTime':alarmRaisedStartTime, 'alarmRaisedEndTime':alarmRaisedEndTime})\n        response = self.post_request(url, json=body, headers = header)\n        resCode = response.status_code\n        resInfo = response.json()\n        if resCode == 200:\n            alarmList = resInfo['rows']\n>       return alarmList\nE       UnboundLocalError: local variable 'alarmList' referenced before assignment\n\n..\\BasicModel\\hms\\alarmModel.py:42: UnboundLocalError","steps":[{"name":"2023-02-21 14:24:39: 登录网管\n","time":{"start":1676960679282,"stop":1676960679304,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:39: 查询基站信息\n","time":{"start":1676960679305,"stop":1676960679342,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:39: 同步获取基站版本信息\n","time":{"start":1676960679342,"stop":1676960680231,"duration":889},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:40: 版本信息查询\n","time":{"start":1676960680231,"stop":1676960680262,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:40:当前运行的版本号: BS5514_V1.30.20B3_JP_V2_V4_04d006","time":{"start":1676960680262,"stop":1676960680263,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:40: 查询版本库中是否有最新版本发布\n","time":{"start":1676960680263,"stop":1676960683338,"duration":3075},"status":"passed","steps":[{"name":"2023-02-21 14:24:43: 最新版本号: BS5514_V1.30.20B3_JP_V2_V4_2c0291","time":{"start":1676960683338,"stop":1676960683338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:43: 检查版本包是否存在，不存在则从版本库下载并上传。\n","time":{"start":1676960683338,"stop":1676960683338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:43: 版本库中查询版本包是否存在\n","time":{"start":1676960683338,"stop":1676960683396,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:43: 版本包已经存在，不需要下载上传。\n","time":{"start":1676960683396,"stop":1676960683396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:43: 执行版本下载，下载版本：BS5514_V1.30.20B3_JP_V2_V4_2c0291\n","time":{"start":1676960683396,"stop":1676960686062,"duration":2666},"status":"passed","steps":[{"name":"2023-02-21 14:24:46: 下载操作执行成功\n","time":{"start":1676960686061,"stop":1676960686062,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:24:46: 查询下载任务状态\n","time":{"start":1676960686062,"stop":1676960716115,"duration":30053},"status":"passed","steps":[{"name":"2023-02-21 14:24:46: 等待 30s......\n","time":{"start":1676960686088,"stop":1676960716095,"duration":30007},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:25:16: 下载任务执行成功\n","time":{"start":1676960716115,"stop":1676960716115,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:25:16: 版本激活\n","time":{"start":1676960716115,"stop":1676960722162,"duration":6047},"status":"passed","steps":[{"name":"2023-02-21 14:25:22: 激活操作执行成功\n","time":{"start":1676960722161,"stop":1676960722162,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:25:22: 查询激活任务状态\n","time":{"start":1676960722162,"stop":1676960872377,"duration":150215},"status":"passed","steps":[{"name":"2023-02-21 14:25:22: 等待 30s......\n","time":{"start":1676960722188,"stop":1676960752190,"duration":30002},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:25:52: 等待 30s......\n","time":{"start":1676960752217,"stop":1676960782220,"duration":30003},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:26:22: 等待 30s......\n","time":{"start":1676960782246,"stop":1676960812252,"duration":30006},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:26:52: 等待 30s......\n","time":{"start":1676960812281,"stop":1676960842287,"duration":30006},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:27:22: 等待 30s......\n","time":{"start":1676960842340,"stop":1676960872355,"duration":30015},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:27:52: 激活任务执行成功\n","time":{"start":1676960872377,"stop":1676960872377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":6,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:27:52:版本激活成功，等待基站复位重启（3min）","time":{"start":1676960872377,"stop":1676961052381,"duration":180004},"status":"passed","steps":[{"name":"2023-02-21 14:27:52: 等待 180s......\n","time":{"start":1676960872377,"stop":1676961052381,"duration":180004},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:30:52: 确认基站是在线状态\n","time":{"start":1676961052381,"stop":1676961052422,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:30:52:确认版本升级成功，校验升级后版本号是否正确","time":{"start":1676961052422,"stop":1676961053968,"duration":1546},"status":"passed","steps":[{"name":"2023-02-21 14:30:52: 同步获取基站版本信息\n","time":{"start":1676961052422,"stop":1676961053925,"duration":1503},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:30:53: 版本信息查询\n","time":{"start":1676961053925,"stop":1676961053968,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:30:53: 确认小区状态与预期一致,预期状态:available\n","time":{"start":1676961053969,"stop":1676961180812,"duration":126843},"status":"passed","steps":[{"name":"2023-02-21 14:30:53: 查询小区状态\n","time":{"start":1676961053969,"stop":1676961055799,"duration":1830},"status":"passed","steps":[{"name":"2023-02-21 14:30:55: 小区状态:unavailable\n","time":{"start":1676961055798,"stop":1676961055799,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:30:55: 等待 5s......\n","time":{"start":1676961055799,"stop":1676961060812,"duration":5013},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:31:00: 查询小区状态\n","time":{"start":1676961060812,"stop":1676961061892,"duration":1080},"status":"passed","steps":[{"name":"2023-02-21 14:31:01: 小区状态:unavailable\n","time":{"start":1676961061891,"stop":1676961061892,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:31:01: 等待 5s......\n","time":{"start":1676961061892,"stop":1676961066908,"duration":5016},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:31:06: 查询小区状态\n","time":{"start":1676961066908,"stop":1676961120818,"duration":53910},"status":"passed","steps":[{"name":"2023-02-21 14:32:00: 小区状态:unavailable\n","time":{"start":1676961120817,"stop":1676961120818,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:32:00: 等待 5s......\n","time":{"start":1676961120818,"stop":1676961125824,"duration":5006},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:32:05: 查询小区状态\n","time":{"start":1676961125824,"stop":1676961126747,"duration":923},"status":"passed","steps":[{"name":"2023-02-21 14:32:06: 小区状态:unavailable\n","time":{"start":1676961126746,"stop":1676961126747,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:32:06: 等待 5s......\n","time":{"start":1676961126747,"stop":1676961131761,"duration":5014},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:32:11: 查询小区状态\n","time":{"start":1676961131761,"stop":1676961180811,"duration":49050},"status":"passed","steps":[{"name":"2023-02-21 14:33:00: 小区状态:available\n","time":{"start":1676961180810,"stop":1676961180811,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:33:00: 小区状态-available,小区预期状态-available\n","time":{"start":1676961180811,"stop":1676961180812,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":15,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:33:00: 登录网管\n","time":{"start":1676961180812,"stop":1676961180828,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"2023-02-21 14:33:00:基站历史告警查询","time":{"start":1676961180828,"stop":1676961180829,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[{"uid":"902e079fc13f9178","name":"log","source":"902e079fc13f9178.txt","type":"text/plain","size":4611}],"parameters":[],"stepsCount":48,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"story","value":"冒烟测试——版本升级"},{"name":"tag","value":"run(order=1)"},{"name":"tag","value":"基站版本冒烟测试"},{"name":"parentSuite","value":"TestCase.hms"},{"name":"suite","value":"test_version"},{"name":"host","value":"DESKTOP-6PNVEH8"},{"name":"thread","value":"8860-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.hms.test_version"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["基站版本冒烟测试","run(order=1)"]},"source":"2f05b9fd948f7c79.json","parameterValues":[]}